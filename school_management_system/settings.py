"""
Django settings for school_management_system project.

Generated by 'django-admin startproject' using Django 3.1.13.
"""
import os
import dotenv
from pathlib import Path
from dotenv import load_dotenv
import dj_database_url
import django_heroku

load_dotenv()
#BASE_DIR = Path(__file__).resolve().root.root

# Build paths inside the project like this: BASE_DIR / 'subdir'.
#BASE_DIR = Path(__file__).resolve().parent.parent
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

SECRET_KEY = str(os.getenv('SECRET_KEY'))

#DEBUG = 'False'
DEBUG = os.environ.get('DJANGO_DEBUG', '') != 'False'

TEST_RUNNER = 'django_heroku.HerokuDiscoverRunner'


ALLOWED_HOSTS = ['1.2.7.0.0.1','simple-school-system.herokuapp.com']


INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'students.apps.StudentsConfig',
    'corsheaders',
    'rest_framework',
    'rest_framework.authtoken',
    'knox',
    "whitenoise"
    #'modeltranslation'
]

REST_SESSION_LOGIN = True

REST_FRAMEWORK = {
     'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.BasicAuthentication' ,
        'knox.auth.TokenAuthentication',
     ),

    'DATETIME_FORMAT': "%m/%d/%Y %H:%M:%S",
}

CORS_ORIGIN_WHITELIST = (
    #"http://localhost:3000",    
    "https://simple-school-system.herokuapp.com"

)

CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",
    "https://simple-school-system.herokuapp.com"
 ]

ACCESS_CONTROL_ALLOW_ORIGIN = [
    #"http://localhost:3000",
    "https://simple-school-system.herokuapp.com"
    ]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    #'django.middleware.locale.LocaleMiddleware', #for internalization
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware', 
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'school_management_system.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'build')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'school_management_system.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases
"""

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'simpleSchool',
        'USER': 'postgres',
        'PASSWORD': 'bishbish#',
        'HOST': '127.0.0.1',
        'PORT': '5432',
    }
}
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

DATABASES = {}
DATABASES['default'] = dj_database_url.config(conn_max_age=600)
"""


DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        #'NAME': BASE_DIR / 'db.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

db_from_env = dj_database_url.config(conn_max_age=500)
DATABASES['default'].update(db_from_env)


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/


LANGUAGE_CODE = 'en-us'

DATE_FORMAT = "%m/%d/%Y %H:%M:%S"

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

 
LANGUAGES = [
    ('en','English'),
    ('ar', 'Arabic'),
]

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'build/static')
MEDIA_URL = '/build/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'build')

STATICFILES_DIRS = [ 
    os.path.join(BASE_DIR, 'build'),
]
#STATIC_ROOT = os.path.join(BASE_DIR, 'media')

STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'
#STATICFILES_STORAGE = 'whitenoise.django.GzipManifestStaticFilesStorage'

django_heroku.settings(locals())

dotenv_file = os.path.join(BASE_DIR, '.env')
if os.path.isfile(dotenv_file):
    dotenv.load_dotenv(dotenv_file)

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


CSRF_COOKIE_SECURE = True

SESSION_COOKIE_SECURE = True
#options = DATABASES['default'].get('OPTIONS', {})
#options.pop('sslmode', None)


